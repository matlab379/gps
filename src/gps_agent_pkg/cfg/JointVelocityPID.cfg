#!/usr/bin/env python

# Copyright (c) 2013-2015, Rethink Robotics
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the Rethink Robotics nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

from dynamic_reconfigure.parameter_generator_catkin import (
    ParameterGenerator,
    double_t,
)

gen = ParameterGenerator()

joints = ('s0', 's1', 'e0', 'e1', 'w0', 'w1', 'w2')

msg = ("p", "i", "d", "c")


min = 0.0000001
default_p = (4.0, 4.0, 5.0, 5.0, 1.5, 10.0, 1.5)
default_i = (0.00001, 0.001, 0.01, 0.01, 0.00001, 0.00001, 0.01)
default_d = (0.00001,0.00001,0.00001,0.00001,0.00001,0.00001,0.00001)
default_c = (0.001, 0.001, 0.00001, 0.00001, 0.00001, 0.00001, 0.00001)
max_p = (50.0, 50.0,50.0,50.0,50.0,50.0,50.0)
max_i = (100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0)
max_d = (300.0, 300.0, 300.0, 300.0, 300.0, 300.0, 300.0)
max_c = (100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0)

for idx, joint in enumerate(joints):
    gen.add(
        joint + "_p", double_t, 0, joint + msg[0],
        default_p[idx], min, max_p[idx]
        )
    gen.add(
        joint + "_i", double_t, 0, joint + msg[1],
        default_i[idx], min, max_i[idx]
        )
    gen.add(
        joint + "_d", double_t, 0, joint + msg[2],
        default_d[idx], min, max_d[idx]
        )
    gen.add(
        joint + "_c", double_t, 0, joint + msg[3],
        default_c[idx], min, max_c[idx]
        )

exit(gen.generate('gps_agent_pkg', '', 'JointVelocityPID'))
